{"version":3,"sources":["components/Filter/Filter.module.css","redux/actions.js","redux/reducer.js","redux/store.js","components/ContactList/ContactList.jsx","redux/selector.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js","components/Form/Form.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","actions","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","contacts","createReducer","state","filter","_","combineReducers","phonebookPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","users","persistReducer","contactsReduser","devTools","process","stores","persistor","persistStore","connect","normalizedFilter","toLowerCase","contact","includes","dispatch","onDeleteContact","contactsActions","className","s","list","map","listItem","listItemText","button","type","onClick","getContacts","onSubmit","useState","setName","setNumber","useSelector","reset","form","e","preventDefault","find","alert","label","input","value","pattern","title","required","onChange","currentTarget","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c177e3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3kA9G\",\"input\":\"Filter_input__2CrvU\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => {\r\n  return {\r\n    payload: { id: uuidv4(), name: name, number: number },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst actions = { addContact, deleteContact, changeFilter };\r\n\r\nexport default actions;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport contactsReduser from './reducer';\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'contact',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    users: persistReducer(phonebookPersistConfig, contactsReduser),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\nconst stores = { store, persistor };\r\n\r\nexport default stores;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/actions';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.listItem} key={id}>\r\n          <p className={s.listItemText}>\r\n            {name}: <span className={s.listItemText}>{number}</span>\r\n          </p>\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  const { filter, contacts } = state.users;\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const getVisibleContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n\r\n  return { contacts: getVisibleContacts };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","export const getContacts = state => state.users.contacts;\r\nexport const getFilter = state => state.users.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const getFiteredContacts = contacts => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(text =>\r\n      text.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  return getFiteredContacts(contacts);\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport contactsActions from '../../redux/actions';\r\nimport { getContacts } from '../../redux/selector';\r\nimport s from './Form.module.css';\r\n\r\nconst Form = ({ onSubmit }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const handleNameChange = e => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n\r\n  const handleNumberChange = e => {\r\n    setNumber(e.currentTarget.value);\r\n  };\r\n\r\n  const handleAddContact = e => {\r\n    e.preventDefault();\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts.`);\r\n      reset();\r\n      return;\r\n    }\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  return (\r\n    <div>\r\n      <form className={s.form} onSubmit={handleAddContact}>\r\n        <label className={s.label}>\r\n          Name\r\n          <br />\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            onChange={handleNameChange}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <br />\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            onChange={handleNumberChange}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsActions.addContact(name, number)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nconst mapStateToProps = state => ({\r\n  value: state.users.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactsActions.changeFilter(e.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import ContactList from '../ContactList/ContactList';\r\nimport Form from '../Form/Form';\r\nimport Filter from '../Filter/Filter';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <Form />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport stores from './redux/store';\r\nimport App from './components/App/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={stores.store}>\r\n      <PersistGate persistor={stores.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2VHn1\",\"label\":\"Form_label__1Du1J\",\"input\":\"Form_input__2XPkp\",\"button\":\"Form_button__DdiDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2t79T\",\"listItem\":\"ContactList_listItem__1VLMZ\",\"listItemText\":\"ContactList_listItemText__31yUs\",\"button\":\"ContactList_button__1M8gN\"};"],"sourceRoot":""}